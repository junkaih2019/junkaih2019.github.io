[{"id":"04727e5abe16b3f5ae3e3ed9ebea8363","title":"Python算法题基操","content":"Python算法题基操输入# 整型输入\nn = int(input())\n\n# 浮点输入\nk = float(input())\n\n# 输入三个数，例如：1 2 3\na,b,c = map(int,input().split())\n\n# 输入一串数字并用列表存储，例如：1 2 3 4 5\ns = [int(i) for i in input().split()]\n\n输出# 遍历输出列表所有元素\na = [1,2,3,4]\nprint(' '.join(map(str,a)))   #1 2 3 4\n\n# 四舍五入\na = 3.1415926\nprint(int(a + 0.5))\n\n# 保留两位\na = 3.1415926\nprint(\"%.2f\"%a)\n\n数组#开一个长度为5的数组,内容为0\na = [0 for _ in range(5)]\n\n","slug":"Python算法题基操","date":"2021-05-05T12:53:12.000Z","categories_index":"Python,蓝桥杯","tags_index":"Python,蓝桥杯","author_index":"JunKai"},{"id":"18cd34895fd3ec17b3af53a59599684c","title":"1 什么是自然语言处理（NLP）","content":"此系列文章是对哥大NLP课程的笔记。原课程网站为：COMS W4705 Natural Language Processing\n什么是自然语言处理（NLP）\n从输入输出角度看，计算机处理语言有两个方面：\n\n\n分析语言（NLU)，试图将语言当做输入，去理解语言的含义\n\n整合语言（NLG），试图输出自然语言\n\n\n\n\n\n从应用来看\n\n\n机器翻译（Machine Translation)之后会介绍建立一个模型的关键步骤\n\n信息抽取（Information Extraction)将一大段的信息理解（NLU），将其压缩成类似于数据库中表的结构。进一步有利于对信息进行：\n\n\n\n复杂查找:例如从一个招聘网站查找“薪水至少5000并在深圳的职位”，先将网页中的职位信息转换为数据库结构，再在数据库中查找会方便的多\n\n数据统计:例如要统计几年来会计职位数的变化，同理会更方便\n\n\n\n文本摘要 (Text Summarization)压缩一个或多个文件中的信息，生成一篇摘要，覆盖多个要点\n\n\n\n\n\n\n对话系统(Dialogue System)其基本问题在于，让机器用自然语言与用户进行交流。一般包含两个过程，一是NLU的过程，理解用户输入的自然语言；二是NLG的过程，例如将分类问题的结果输出为自然语言。\n\n\n\n基于这些应用，一些NLP的基本问题：\n\n标记（Tagging)简单来说，标记是将一串自然语言序列映射到一串标记序列。例1是将句子中的单词映射到不同的词性，例二是找出句子中存在的实体并标注。\n句法分析（Parsing)输入一个句子，分析其每个词起到的语法结构，输出一课语法树。这棵语法树描述了这个句子的语法结构，有助于我们理解这个句子。\n\n为什么NLP困难一些关键性难题：\n\n语义模糊性对于同一句话，我们可以从不同角度去理解，得到截然不同的意思，例如:::danger\n\n\n电脑像你妈了解你一样了解你\n电脑了解到你像你妈\n电脑和了解你妈一样了解你::: \n\n  这种模糊性还体现在多种层面上，\n  语音层面上，例如：  \n  语法层面上，例如：  选择不同的语法结构，句子会出现不同的解释  \n  语义层面上，例如：  同一个词语，对应着多个不同的意思  \n  论述指代上，例如：  第二局中的“she”即可以指代Alice,也可以指代your mother.  \n课程内容是关于什么的\nNLP子问题：\n\n\n词类标记（part-of-speech tagging）\n句法分析（parsing）\n词义消歧（word-sense disambiguation）\n\n\n机器学习技术：\n\n\n概率上下文无关法PCFGs（probabilistic context-free grammers）\n隐马尔可夫模型（hidden markov models）\n评估/平滑方法（estimation/smoothing techniques）\nEM算法（the EM algorithm）\n对数线性模型(log-linear models）\n\n\n应用\n\n\n信息抽取（information extraction）\n机器翻译（machine learning）\n自然语言界面（natural language interfaces）\n\n","slug":"nlp1","date":"2021-05-05T09:19:36.000Z","categories_index":"NLP","tags_index":"NLP","author_index":"JunKai"},{"id":"caff10cd5c6289bc58eb84810c5650bd","title":"Markdown样式预览","content":"一级标题二级标题三级标题四级标题五级标题六级标题段落单纯空行I really like using Markdown.\nI think I’ll use it to format all of my documents from now on.\n空格+空格+shift+enterDon’t put tabs or spaces in front of your paragraphs.Keep lines left-aligned like this.\n打标签”“First line with the HTML tag after.And the next line.\n粗体Love is bold.我是粗体形态。\n斜体This is italicized text.这是斜体形态。\n粗体加斜体This text is really important.这段文本非常重要。\n引用\n\n\n\n\n\n\n\n\nDorothy followed her through many of the beautiful rooms in her castle.\n\n\n\n\n\n\n\n\n\n这是一段引用\n多段引用\n\n\n\n\n\n\n\n\nDorothy followed her through many of the beautiful rooms in her castle.\nThe Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.\n\n\n\n\n\n\n\n\n\n段落一：这是第一个引用段落\n段落二：这是第二个引用段落\n嵌套块引用\n\n\n\n\n\n\n\n\nDorothy followed her through many of the beautiful rooms in her castle.\n\nThe Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.\n\n\n\n\n\n\n\n\n\n\n一级段落\n\n二级段落\n\n带有其他元素的块引用\n\n\n\n\n\n\n\n\nThe quarterly results look great!\nRevenue was off the chart.\nProfits were higher than ever.\n\n Everything is going according to plan.\n列表有序列表\n第一项\n第二项\n第三项\n第四项无序列表\n\n\n第一个\n第二个\n第三个\n第四个\n4.1\n4.2\n4.3\n4.3.1\n4.3.2\n\n\n\n\n\n在列表中嵌套其他元素\n第一列内容\n\n第二列内容  \n  加一些内容在中间\n\n第三列内容  \n\n第一列内容\n\n第二列内容\n\n\n\n\n\n\n\n\n\n加一些引用在中间\n\n第三列内容\n\n\n代码块\n打开文件\n\n缩进两个制表符\n def function(num):\n     if num &gt; n:\n         return\n     else：\n         for i in range(n):\n             print(&#39;yes&#39;)\n\n\n执行代码\n\n\n插入图片\n打开网站\n搜索图片\n插入图片\n\n\n4.关闭文件\n代码缩进一个制表符或四个空格print(&#39;good bye&#39;)\n\n语法高亮arr = [i for i in range(4)]\n\n分割线第一种  \n\n第二种  \n\n第三种\n——————————————————\n链接这是b站这是百度\n纯网站和emailhttps://junkaih.github.io&#x31;&#48;&#53;&#52;&#54;&#x33;&#x30;&#52;&#x30;&#x36;&#64;&#x71;&#x71;&#46;&#x63;&#x6f;&#109;\n带格式的链接强调链接**bilibili**斜体链接*bilibili*代码框框bilibili\n","slug":"md-modle","date":"2021-05-07T05:50:54.000Z","categories_index":"","tags_index":"","author_index":"JunKai"},{"id":"714d51f54fb5c87cd7345124d1c973ad","title":"test-container","content":"Tip容器\n\n\n\n\n\n提示\nNormal Tips Container\n\nwarning容器\n\n\n\n\n\n\n注意\nWarning!!!警告\n\nDanger容器\n\n\n\n\n\n\n特别注意\nDanger!!!\n\nDetails容器\nClick to see more\nFusce rutrum venenatis eros in hendrerit. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Nullam eget risus egestas, aliquet ipsum sed, volutpat tortor. Proin finibus tortor ac mauris finibus rutrum. Nullam tincidunt arcu eu urna ullamcorper, eu ultricies turpis ornare. Morbi id sollicitudin orci. Proin lobortis vehicula nibh a ornare. Cras sodales eu ligula quis fermentum. Proin eu ultrices leo, quis iaculis justo. Sed dictum, nulla sit amet imperdiet commodo, libero sapien semper justo, ut lobortis elit nunc vitae ante. Nullam lobortis odio quam, ac condimentum elit posuere vitae. Sed ornare, odio et rutrum varius, lorem eros gravida urna, in pharetra sapien justo non magna.\n\ndetails content\ndetails new line\n\nconsole.log('hello world')\n\n\n\n","slug":"test-container","date":"2021-05-06T11:56:38.000Z","categories_index":"","tags_index":"","author_index":"JunKai"},{"id":"f73a8e23e6f6f669cf99c7dba8fa0722","title":"","content":"","slug":"Untitled","date":"2021-05-06T11:56:11.267Z","categories_index":"","tags_index":"","author_index":"JunKai"},{"id":"95b0ea16938ad0141176f88e743c1c3a","title":"test-cover","content":"封面图：\n\n","slug":"test-cover","date":"2021-05-06T10:56:31.000Z","categories_index":"","tags_index":"","author_index":"JunKai"},{"id":"9f603f4d8f055ec057decaa8865d8462","title":"article","content":"","slug":"article-1","date":"2021-04-16T10:16:23.000Z","categories_index":"","tags_index":"","author_index":"JunKai"},{"id":"9f603f4d8f055ec057decaa8865d8462","title":"article","content":"# 测试测试一下怎么上传一篇博客\n","slug":"article","date":"2021-04-16T09:39:55.000Z","categories_index":"","tags_index":"","author_index":"JunKai"},{"id":"b9663f58f18133b35bfe243f3e916a80","title":"Hello World","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new \"My New Post\"\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n","slug":"hello-world","date":"2021-04-16T06:50:40.255Z","categories_index":"","tags_index":"","author_index":"JunKai"}]